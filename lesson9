-- Introduction to constraints

-- controls the kind of data goes into the database

-- constraint can be added on table and column

-- not null, unique,default , primary key, foreign key, check

create table table_nn(
	id serial primary key,
	tag text not null
);

select * from table_nn;

insert into table_nn(tag) values('Adam');

insert into table_nn(tag)  values(null); -- error

insert into table_nn(tag) values(' '); -- empty value added

create table table_nn2(
	id serial primary key,
	tag2 text
);

select * from table_nn2;

alter table table_nn2
alter column tag2 set not null;

-- UNIQUE constraint

create table table_emails(
	id serial primary key,
	email text unique
);

select * from table_emails;

insert into table_emails(email) values('a@b.com'),('c@d.com');
-- UNIQUE constraint on multiple column
create table table_products(
	id serial primary key,
	product_code varchar(10),
	product_name text,
	unique(product_code,product_name)
);

alter table table_products
add constraint your_name unique(col1,col2);

insert into table_products(product_code,product_name) values('A','apple');

select * from table_products;

-- DEFAULT Constraint

create table employees(
	employee_id serial primary key,
	first_name varchar(50),
	last_name varchar(50),
	is_enable varchar(2) default 'y'
);

insert into employees(first_name,last_name) values('Sayani','Majumder'),('Anisha','Sinha');

select * from employees;

alter table employees
alter column is_enable set default 'n';

insert into employees(first_name,last_name) values('Triparna','Majumder'),('Sukanya','Chakraborty');


alter table employees
alter column is_enable drop default;

-- PRIMARY KEY Constraint

-- defined in table level

-- primary key can have single of multiple field / column

-- when multiple fields are used as a primary key ,they are called composite Key
-- primay is = unique key + not NUll

create table table_items(
	item_id integer primary key,
	item_name varchar(100) not null
);

select * from table_items;

insert into table_items(item_id,item_name) values(1,'Pen');

-- adding primary key to an existing table

alter table table_items
drop constraint table_items_pkey;

alter table table_items
add primary key(item_id); -- can do on multiple columns also

-- composite key (primary key on multiple column)

create table t_grades(
	course_id varchar(100) not null,
	student_id varchar(100) not null,
	grade int not null
);

select * from t_grades;

insert into t_grades(course_id,student_id,grade) values('Math','s1',100),('physics','s1',100),('English','s2',90);

drop table t_grades;

create table t_grades(
	course_id varchar(100) not null,
	student_id varchar(100) not null,
	grade int not null,
	primary key(course_id,student_id) -- order of composite key is important
);

-- drop a primary key


alter table t_grades
drop constraint t_grades_pkey;

alter table t_grades
add constraint t_grades_pkey
primary key(course_id,student_id);

-- Foreign Key

create table t_producta(
	product_id int primary key,
	product_name varchar(100) not null,
	supplier_di int not null
);


create table t_supplier(
	supplier_di int primary key,
	suppler_name varchar(100) not null
);

insert into t_supplier(supplier_di,suppler_name) values(1,'Supplier1'),(2,'supplier2');

select * from t_supplier;

insert into t_producta(product_id,product_name,supplier_di) values(1,'pen',1),(2,'pencil',2);

select * from t_producta;

drop table t_producta;

drop table t_supplier;

create table t_products(
	product_id int primary key,
	product_name varchar(100) not null,
	supplier_id int not null,
	foreign key(supplier_id) references t_suppliers (supplier_id)
);

create table t_suppliers(
	supplier_id int primary key,
	supplier_name varchar(100) not null
);

-- Foreign key maintains referential Integrity

insert into t_suppliers(supplier_id,supplier_name) values(1,'supplier1'),(2,'supplier2');

insert into t_products(product_id,product_name,supplier_id) values(1,'pen',1),(2,'paper',2);

select * from t_suppliers;
select * from t_products;

delete from t_suppliers where supplier_id = 1;

-- drop a constraint

alter table t_products
drop constraint t_products; -- constraint name

-- update foreign key constraints on an existing table
alter table t_products
add constraint t_products_supplier_id_fkey foreign key (supplier_id) references t_suppliers(supplier_id);

--check Constraint

create table staff(
	staff_id serial primary key,
	first_name varchar(50),
	last_name varchar(50),
	birth_date date check (birth_date > '1900-01-01'),
	join_date date check(join_date > birth_date),
	salary numeric check(salary > 0)
);

select * from staff;

insert into staff(staff_id,first_name,last_name,birth_date,join_date,salary)
values(1,'Sayani','Majumder','1999-02-10','2020-02-01',900000);

-- Define chekc Constraint for existing tables
create table prices(
	price_id serial primary key,
	product_id int not null,
	price numeric not null,
	discount numeric not null,
	valid_from date not null
);

alter table prices
add constraint prices_check
check (
	Price > 0
	and discount >= 0
	and price > discount
);

insert into prices (product_id,price,discount) values('1',100,20);

-- rename constraint on new table

alter table prices
rename constraint price_check to price_discount_check;










